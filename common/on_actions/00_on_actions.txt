on_actions = {
	# country 
#	on_new_term_election = {
#		random_events = {
#			100 = election.2
#			100 = election.3
#			100 = election.4
#			100 = election.5
#			100 = election.6
#			100 = election.11
#			100 = election.12
#			100 = election.13
#			100 = election.14
#			100 = election.15
#			
#			100 = election.2
#			100 = election.3
#			100 = election.4
#			100 = election.5
#			100 = election.6
#			100 = election.13
#			100 = election.14
#			100 = election.101
#			100 = election.102
#			100 = election.103
#			100 = election.104
#		}
#	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {

		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}

	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}

	on_nuke_drop = {

		effect = {
			if = {
				limit = { NOT = { has_country_flag = achievement_has_dropped_nuke } }
				goto_state = FROM
				set_country_flag = achievement_has_dropped_nuke
			}
			if = {
				limit = {
					FROM = { state = 378 }					
				}
				set_country_flag = achievement_has_nuked_california
			}
			if = {
				limit = {
					FROM = { is_core_of = AST }					
				}
				set_country_flag = achievement_AST_nuke_self
			}
			if = {
				limit = {
					tag = SWE
					FROM = {
						is_owned_by = DEN
						is_core_of = DEN
					}
				}
				set_country_flag = achievement_med_plutonium
			}
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#
	#}

	#on_five_year_pulse = {
	#
	#}

	on_border_war_lost = {
		
	}
	
	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {
			
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			#Give achievement to nation joining a faction, but not in one from game start
			if = {
				limit = {
					date > 1936.01.02
				}
				FROM = {
					if = {
						limit = {
							is_faction_leader = no
						}
						set_country_flag = achievement_has_joined_faction
					}
				}
			}
			#Remove anti_soviet_pact if joining commie Soviet in faction
			if = {
				limit = {
					original_tag = SOV
					has_government = communism
					FROM = {
						has_idea = anti_soviet_pact 
					}
				}
				FROM = {
					remove_ideas = anti_soviet_pact
				}
			}
	
			# Sunset invasion check
			if = {
				limit = {
					is_puppet = no
					OR = {
						AND = {
							tag = MEX
							FROM = {
								capital_scope = {
									NOT = { is_on_continent = south_america }
								}
							}
						}
						AND = {
							FROM = {
								tag = MEX
							}
							capital_scope = {
								NOT = { is_on_continent = south_america }
							}
						}
					}
				}
				set_country_flag = achievement_failed_sunset_invasion
			}			
		}
	}

	#FROM is faction leader on join faction requests. THIS DOES NOT FIRE ON ADD_TO_FACTION EFFECT! USE ON_OFFER_JOIN_FACTION!
	on_join_faction = {
		
	}

	#FROM is war target
	on_declare_war = {
		effect = {

			#If prepared by siphoning equipment, receive equipment back
			if = {
				limit = {
					FROM = {
						has_civil_war = yes
						has_country_flag = siphoned_equipment_stockpiles_for_civil_war
					}
					has_civil_war = yes
				}
				FROM = {
					clr_country_flag = siphoned_equipment_stockpiles_for_civil_war
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = 1000
					}
				}
			}

			#If prepared with surprise attack plan, get bonus
			if = {
				limit = {
					FROM = {
						original_tag = ROOT
						#has_civil_war = yes
						has_country_flag = formulated_surprise_attack_plan_for_civil_war
					}
					#has_civil_war = yes
				}
				FROM = {
					clr_country_flag = formulated_surprise_attack_plan_for_civil_war
					add_timed_idea = {
						idea = civil_war_surprise_attack_plan
						days = 30
					}
				}
			}

			if = {
				limit = {
					ROOT = {
						tag = RUS
					}
					FROM = {
						OR = {
							tag = RVA
							tag = DON
						}
					}
				}
				every_country = {
					diplomatic_relation = {
						country = FROM
						relation = guarantee
						active = no
					}
				}
			}

		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = { id = news.159 }
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
			if = {
				limit = { original_tag = RVA }
				remove_ideas = {
					RVA_volunteer_army_1
					RVA_volunteer_army_2
					RVA_volunteer_army_3
					RVA_volunteer_army_4
					RVA_volunteer_army_5
				}
			}
			if ={
				limit = { tag = FRA has_global_flag = WWI_is_now is_subject_of = GER }
				GER = { end_puppet = FRA }
				FRA = { leave_faction = yes add_to_war = { targeted_alliance = ENG enemy = GER } }
				ENG = { add_to_faction = FRA }
			}
		}
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			if = {
				limit = {
					original_tag = FRA
					is_democratic_country = yes
					is_puppet = no
				}
				drop_cosmetic_tag = yes
			}
		}
	}


	on_government_change = {
		effect = {
#			if = {
#				limit = { is_democratic_country = yes }
#				if = {
#					limit = { has_idea = democratic_opposition_voicing_protests }
#					remove_ideas = democratic_opposition_voicing_protests
#				}
#				if = {
#					limit = { has_idea = democratic_revolutionaries }
#					remove_ideas = democratic_revolutionaries
#				}
#				if = {
#					limit = { has_idea = reign_of_terror }
#					remove_ideas = reign_of_terror
#				}
#			}
			if = {
				limit = { has_government = communism }
				if = {
					limit = { original_tag = SAF }
					set_cosmetic_tag = SAF_COM
				}
				if = {
					limit = { has_idea = communist_partisans_recruiting }
					remove_ideas = communist_partisans_recruiting
				}
				if = {
					limit = { has_idea = communist_revolutionaries }
					remove_ideas = communist_revolutionaries
				}
				if = {
					limit = { has_idea = communism_defeated }
					remove_ideas = communism_defeated
				}

				#Remove anti_soviet_pact
				if = {
					limit = { has_idea = anti_soviet_pact }
					remove_ideas = anti_soviet_pact
				}
			}
			if = {
				limit = { has_government = fascism }
				if = {
					limit = { has_idea = fascist_assault_divisions }
					remove_ideas = fascist_assault_divisions
				}
				if = {
					limit = { has_idea = fascist_revolutionaries }
					remove_ideas = fascist_revolutionaries
				}
				if = {
					limit = { has_idea = fascism_defeated }
					remove_ideas = fascism_defeated
				}
				if = {
					limit = { has_idea = anti_nazi_coup }
					remove_ideas = anti_nazi_coup
				}
			}
			if = {
				limit = { NOT = { has_government = communism has_government = radical_socialism has_government = social_democracy } }
				fall_of_red_alert_level_when_one_country_turns_to_communism = yes
			}
			if = {
				limit = { OR = { has_government = communism has_government = radical_socialism } }
				rise_of_red_alert_level_when_one_country_turns_to_communism = yes
			}
		}
	}

	on_coup_succeeded = {
		effect = {
			#Turn elections on for democracies created from coup
			random_other_country = {
				limit = {
					is_democratic_country = yes
					original_tag = ROOT
				}
				set_politics = {
					elections_allowed = yes
				}
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
			
		}
	}

	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	
	on_puppet = {
		effect = {
			
		}
	}
	
	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	
	on_release_as_puppet = {
		effect = {
			
		}
	}
	
	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			
		}
	}

	#Not run on a specific country.
	on_startup = {
		effect = {
			GER = {
				country_event = { id = npt.kostili.1 hours = 1 }
			}
			every_country = {
				initiate_verification_of_the_popularity_of_coalitions = yes
			}
			set_global_flag = WWI_is_now
		}
	}
	
	on_unit_leader_created = {
		effect = {
			
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = RVA has_country_leader = { name = "Lavr Kornilov" ruling_only = yes } NOT = { has_country_flag = Kornilov_will_dead has_country_flag = Kornilov_will_not_dead has_country_flag = Lavr_Kornilov_dead } }
					RUS = { NOT = { has_country_flag = Lavr_Kornilov_dead } }
					FROM.FROM = { OR = { state = 234 state = 813 state = 260 state = 219 state = 236 } }
				}
				country_event = rcw_udktc.7
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = BKL }
					FROM = { tag = RUS }
					FROM.FROM = { state = 563 }
				}
				BKL = { set_state_owner = 563 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 563 }
				}
				SIB = { set_state_owner = 563 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 566 }
				}
				SIB = { set_state_owner = 566 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 575 }
				}
				SIB = { set_state_owner = 575 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 564 }
				}
				SIB = { set_state_owner = 564 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 565 }
				}
				SIB = { set_state_owner = 565 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 644 }
				}
				SIB = { set_state_owner = 644 }
			}
			if = {
				limit = {
					NOT = { has_global_flag = RUS_civil_war_over }
					ROOT = { tag = SIB }
					FROM = { tag = RUS }
					FROM.FROM = { state = 574 }
				}
				SIB = { set_state_owner = 574 }
			}
		}
	}
	
	on_unit_leader_level_up = {
		effect = {
			
		}
	}
	
	# From is owner country
	on_army_leader_daily = {
		effect = {
			if = {
				limit = {
					check_variable = { random < 0.02 }
					NOT = { has_trait = sick }
					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
					divide_temp_variable = { temp = num_units }
					check_variable = { temp > 0.75 }
					NOT = { has_unit_leader_flag = recently_sick }
				}
				add_timed_unit_leader_trait = {
					trait = sick
					days = 30
				}
				unit_leader_event = { id = generic.17 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.005 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
}